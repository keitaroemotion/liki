#!/usr/bin/env python
import os
import sys
import subprocess
from os import listdir

wiki_dir = "/usr/local/etc/liki/pages"

def makeDirs(directory):
    if(not os.path.exists(directory)):
        os.makedirs(directory)
    return directory

def addChild(node, term):
    return (node + "/{0}").format(term)

def getDirectory(rootdir, folder):
    return makeDirs(addChild(rootdir, folder))  

def getPage(term):
    return addChild(getDirectory(wiki_dir, term[0]), term)

def useVimToEditFile(page):
    subprocess.call(['vim', page])

def writeToFile(page, text, mode="a"):
    f = open(page, mode)
    f.write(text + "\n")
    f.close

def makeText(text, addition, message=""):
    sys.stdout.write(message)
    return text if (addition == "fin") else makeText(text + addition + "\n", raw_input())

def isKeywordBlank(keyword):
    return keyword == ""

def listRelevantPagesAndFindPage(result_list):
    print(result_list if len(result_list) > 0 else "Nothing")
    findPage("", result_list)

# look for page file
def findPage(keyword="", result_list=[]):
    if(isKeywordBlank(keyword)):
      sys.stdout.write("[find] word: ")
      keyword = raw_input()

    result_list = [f for f in listdir(getDirectory(wiki_dir, keyword[0])) if f.startswith(keyword)]

    {
        True  : (lambda x : showPage(x[0])),
        False : (lambda x : listRelevantPagesAndFindPage(x))
    }[len(result_list) == 1](result_list)

def showPage(page):
    f = open(getPage(page), "r")
    print("")
    print("[" + page + "]")
    print("")
    print(f.read())


def editPage(keyword=""):
    createPage(keyword, False)

# create page file
def createPage(keyword="", isCreation=True):
    if(isKeywordBlank(keyword)):
        sys.stdout.write("["+ ("create" if isCreation else "edit") + "] word: ")
        page = getPage(raw_input())
    if(isCreation):    
         writeToFile(page, makeText("", "", "text[type fin at EOF]: \n"))
    else:
         useVimToEditFile(page)
     

def getArgument(index): 
    return sys.argv[index] if len(sys.argv) > index else ''

# edit page file

# link page file

# list pages with key

# grep pages

#
# here is the main execution part.
#
# if argument does not exist, show help message
if(len(sys.argv) < 2):
  print("you need argument")  
  print("")  
  print("[read]   : read page")  
  print("[make] : create page\n")  
  print("[edit] : edit page\n")  

  sys.exit()   

# dispatch execution function
{
  "read" : findPage,
  "make" : createPage,
  "edit" : editPage
}[sys.argv[1]](getArgument(2))

